

############################################
### JWAVE_GLWU_WEB: Great Lakes Wave Sys ###
###      LSF card for development        ###
############################################
#
# LSF options
#
#BSUB -M 1000
#BSUB -P GLW-T2O
#BSUB -J JWAVE_GLWU_WEB
#BSUB -extsched 'CRAYLINUX[]' -R '1*{select[craylinux && !vnode]} +120*{select[craylinux && vnode]span[ptile=24] cu[type=cabinet]}'
#BSUB -oo JWAVE_GLWU_WEB.out
#BSUB -eo JWAVE_GLWU_WEB.out 
##BSUB -W 00:30
#BSUB -W 00:15
##BSUB -q dev
#BSUB -q "debug"
#BSUB -cwd /gpfs/hps3/emc/marine/noscrub/Roberto.Padilla/ops/lsf_scripts/wave_glwu.v1.1.0

# Setup and load modules 
source $MODULESHOME/etc/modules.sh
module load PrgEnv-intel
module load cfp-intel-sandybridge
module load grib_util/1.0.3
module load prod_util
module load prod_envir
module load iobuf
# Add bloody grads to the mix
module use -a /usrx/local/dev/modulefiles
module load GrADS
module load /gpfs/hps3/emc/marine/noscrub/Todd.Spindler/modulefiles/anaconda_no_mpi/1.0.0 

# Set LSF variables
export MP_EAGER_LIMIT=165536
export MP_COREFILE_FORMAT=core.txt
export MP_EUIDEVELOP=min
export MP_MPILIB=mpich2

export MP_LABELIO=yes
export MP_SINGLE_THREAD=yes
export MP_USE_BULK_XFER=yes
export MPICH_ALLTOALL_THROTTLE=0

export MP_TASK_AFFINITY=cpu
export MP_EUIDEVICE=sn_all
export MP_EUILIB=us

ulimit -s unlimited

export IOBUF_PARAMS='*:count=1:size=8M:prefetch=1:preflush=1'

# Set global variables
export modID=glwu
export MODID=GLWU
export RUN=$modID

runuser=Roberto.Padilla

# envir now set by version card
# Check HOST file for where to run
. ./HOST_${modID}

# Set pref to point to matching IBM machines
pref=`cat /etc/${run_on} | cut -c1-1`
if [ "${pref}" == "l" ]
then
  pref='t'
else
 pref='g'
fi

# Lines below for retrospective testing using data in noscrub
# export DCOM=/gpfs/hps3/emc/marine/noscrub/${runuser}/GLWU_Q1FY15/DCOM
# export INCOM=/gpfs/hps3/emc/marine/noscrub/${runuser}/GLWU_Q1FY15

#export DCOM=${DCOMROOT}/us007003
export DCOM=${DCOMROOT}/prod

export job=JWAVE_GLWU_WEB
export SMSBIN=/gpfs/${pref}p1/emc/globaldump/sms_fake

 #Set Version numbers
if [ -f 'version.card' ]
then
  source ./version.card
else
  echo '##############################################'
  echo '### ERROR !! : COULD NOT FIND VERSION CARD ###'
  echo '##############################################'
  exit 1
fi

# Set PDY and cycle here
export COMDATE=`pwd`

echo $COMDATE
ls $COMDATE

if [ -f $COMDATE/PDY_${modID} ]
then
   source $COMDATE/PDY_${modID}
else
  echo '##################################################'
  echo '### ERROR !! : COULD NOT SET THE PDY AND CYCLE ###'
  echo '##################################################'
  exit 1
fi

# Set j-job parameters (extracted from j-job for DEV by new NCO standards)
# the stmp file system is hugely slow
#export DATA=/gpfs/hps3/stmp/wavepa/${envir}/${job}
#export DATA=/gpfs/hps3/ptmp/wavepa/${envir}/${job}
export DATA=/gpfs/hps3/stmp/${runuser}/${GLWUdir}/${envir}/${job}
#export DATA=/gpfs/hps3/emc/marine/noscrub/${runuser}/tmp/${envir}/${job}
rm -rf $DATA
mkdir -p $DATA
export jlogfile=/dev/null
export SENDECF=NO 
export SENDDBN=NO
export SENDCOM=YES 

# Set paths to home etc
export NET=wave
export HOMEwave=${HOMEwave:-/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/dev/${NET}_${modID}.${wave_glwu_ver}}
export OPSwave=${OPSwave:-/gpfs/hps3/emc/marine/noscrub/${runuser}/ops/${NET}_${modID}.${wave_glwu_ver}/EMC_wave_glwu}
#export CODEwave=${CODEwave:-/gpfs/hps3/emc/marine/noscrub/emc.wavepa/ops/${NET}_code.${wave_code_ver}/${wave_code_pkg}}
#export CODEwave=${CODEwave:-/gpfs/hps3/emc/marine/noscrub/Roberto.Padilla/GIT/EMC_ww3/${NET}_code.${wave_code_ver}/${wave_code_pkg}}
export CODEwave=${CODEwave:-/gpfs/hps3/emc/marine/noscrub/${runuser}/ops/wave_glwu.v1.1.0/EMC_wave_glwu/WW3/${NET}_code.${wave_code_ver}/${wave_code_pkg}}

# Set COM paths
#com=/gpfs/${pref}p1/nco/ops/com
#RP com=/gpfs/hps/nco/ops/com/wave/prod/
#RP COMOUT=/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/COM/${RUN}.${PDY}
export COMOUT=/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/COM_${envir}/${RUN}.${PDY}
#RP export com=${com:-/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/COM}
export com=${com:-/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/COM_${envir}}
export COMIN=${COMIN:-${com}/${RUN}.${PDY}}

#export web=${web:-/gpfs/hps3/emc/marine/noscrub/${runuser}/WEB_${envir}}
export web=${web:-/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/WEB}

export COMOUT=${COMOUT:-${com}/${RUN}.${PDY}}
export COMINOUT=${COMINOUT:-${com}/${RUN}.${PDY}}

module load /gpfs/hps3/emc/marine/noscrub/Todd.Spindler/modulefiles/anaconda_no_mpi/1.0.0
export PYTHON=`which python`

export COMROOT=${com}

# Choose to keep temporary directory
export KEEPDATA='YES'

# Execute the actual J job
############################################################################
JDIR=/gpfs/hps3/emc/marine/noscrub/${runuser}/${GLWUdir}/dev
${JDIR}/wave_${modID}.${wave_glwu_ver}/jobs/JWAVE_${MODID}_WEB
############################################################################
